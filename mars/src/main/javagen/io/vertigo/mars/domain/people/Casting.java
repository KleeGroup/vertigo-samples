package io.vertigo.mars.domain.people;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.URI;
import io.vertigo.dynamo.domain.model.VAccessor;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class Casting implements Entity {
	private static final long serialVersionUID = 1L;

	private Long castId;
	private String characterName;

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_CAST_PEO",
			fkFieldName = "PEO_ID",
			primaryDtDefinitionName = "DT_PEOPLE",
			primaryIsNavigable = true,
			primaryRole = "People",
			primaryLabel = "People",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DT_CASTING",
			foreignIsNavigable = false,
			foreignRole = "Casting",
			foreignLabel = "Casting",
			foreignMultiplicity = "0..*")
	private final VAccessor<io.vertigo.mars.domain.people.People> peoIdAccessor = new VAccessor<>(io.vertigo.mars.domain.people.People.class, "People");

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_CAST_MOV",
			fkFieldName = "MOV_ID",
			primaryDtDefinitionName = "DT_MOVIE",
			primaryIsNavigable = true,
			primaryRole = "Movie",
			primaryLabel = "Movie",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DT_CASTING",
			foreignIsNavigable = false,
			foreignRole = "Casting",
			foreignLabel = "Casting",
			foreignMultiplicity = "0..*")
	private final VAccessor<io.vertigo.mars.domain.movies.Movie> movIdAccessor = new VAccessor<>(io.vertigo.mars.domain.movies.Movie.class, "Movie");

	/** {@inheritDoc} */
	@Override
	public URI<Casting> getURI() {
		return DtObjectUtil.createURI(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'Cast_id'.
	 * @return Long castId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_ID", type = "ID", required = true, label = "Cast_id")
	public Long getCastId() {
		return castId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'Cast_id'.
	 * @param castId Long <b>Obligatoire</b>
	 */
	public void setCastId(final Long castId) {
		this.castId = castId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Character name'.
	 * @return String characterName
	 */
	@Field(domain = "DO_LABEL_LONG", label = "Character name")
	public String getCharacterName() {
		return characterName;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Character name'.
	 * @param characterName String
	 */
	public void setCharacterName(final String characterName) {
		this.characterName = characterName;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'People'.
	 * @return Long peoId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_ID", type = "FOREIGN_KEY", required = true, label = "People")
	public Long getPeoId() {
		return (Long)  peoIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'People'.
	 * @param peoId Long <b>Obligatoire</b>
	 */
	public void setPeoId(final Long peoId) {
		peoIdAccessor.setId(peoId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Movie'.
	 * @return Long movId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_ID", type = "FOREIGN_KEY", required = true, label = "Movie")
	public Long getMovId() {
		return (Long)  movIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Movie'.
	 * @param movId Long <b>Obligatoire</b>
	 */
	public void setMovId(final Long movId) {
		movIdAccessor.setId(movId);
	}

 	/**
	 * Association : Movie.
	 * @return l'accesseur vers la propriété 'Movie'
	 */
	public VAccessor<io.vertigo.mars.domain.movies.Movie> movie() {
		return movIdAccessor;
	}
	
	@Deprecated
	public io.vertigo.mars.domain.movies.Movie getMovie() {
		// we keep the lazyness
		if (!movIdAccessor.isLoaded()) {
			movIdAccessor.load();
		}
		return movIdAccessor.get();
	}

	/**
	 * Retourne l'URI: Movie.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<io.vertigo.mars.domain.movies.Movie> getMovieURI() {
		return movIdAccessor.getURI();
	}

 	/**
	 * Association : People.
	 * @return l'accesseur vers la propriété 'People'
	 */
	public VAccessor<io.vertigo.mars.domain.people.People> people() {
		return peoIdAccessor;
	}
	
	@Deprecated
	public io.vertigo.mars.domain.people.People getPeople() {
		// we keep the lazyness
		if (!peoIdAccessor.isLoaded()) {
			peoIdAccessor.load();
		}
		return peoIdAccessor.get();
	}

	/**
	 * Retourne l'URI: People.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<io.vertigo.mars.domain.people.People> getPeopleURI() {
		return peoIdAccessor.getURI();
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
