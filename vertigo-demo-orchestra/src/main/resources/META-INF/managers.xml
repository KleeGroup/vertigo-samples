<?xml version =	'1.0' encoding = 'UTF-8'?>
<config>
	<boot locales="fr_FR">
		<plugin class="io.vertigo.core.plugins.resource.classpath.ClassPathResourceResolverPlugin" />
		<plugin class="io.vertigo.core.plugins.resource.url.URLResourceResolverPlugin" />
		<plugin class="io.vertigo.core.plugins.param.xml.XmlParamPlugin">
			<param name="url" value="/META-INF/application-config.xml" />
		</plugin>
		<plugin class="io.vertigo.vega.plugins.webservice.servlet.WebAppContextParamPlugin" />
	</boot>
	<module name="vertigo-commons">
		<component api="AnalyticsManager" class="io.vertigo.commons.impl.analytics.AnalyticsManagerImpl" />
		<component api="CodecManager" class="io.vertigo.commons.impl.codec.CodecManagerImpl" />
		<component api="DaemonManager" class="io.vertigo.commons.impl.daemon.DaemonManagerImpl" />
		<component api="EventBusManager" class="io.vertigo.commons.impl.eventbus.EventBusManagerImpl" />
		<component api="CacheManager" class="io.vertigo.commons.impl.cache.CacheManagerImpl">
			<plugin class="io.vertigo.commons.plugins.cache.memory.MemoryCachePlugin" />
		</component>
		<component api="ScriptManager" class="io.vertigo.commons.impl.script.ScriptManagerImpl">
			<plugin class="io.vertigo.commons.plugins.script.janino.JaninoExpressionEvaluatorPlugin" />
		</component>
	</module>
	<module name="vertigo-dynamo">	
		<component api="CollectionsManager" class="io.vertigo.dynamo.impl.collections.CollectionsManagerImpl" />
		<component api="FileManager" class="io.vertigo.dynamo.impl.file.FileManagerImpl" />
		<component api="TaskManager" class="io.vertigo.dynamo.impl.task.TaskManagerImpl" />
		<component api="VTransactionManager" class="io.vertigo.dynamo.impl.transaction.VTransactionManagerImpl" />
		
		<component api="StoreManager" class="io.vertigo.dynamo.impl.store.StoreManagerImpl" />
		<component api="SqlDataBaseManager" class="io.vertigo.dynamo.impl.database.SqlDataBaseManagerImpl">
			<plugin class="io.vertigo.dynamo.plugins.database.connection.datasource.DataSourceConnectionProviderPlugin">
				<param name="name" value="orchestra"/>
				<param name="classname" value="${boot.db.classname}" />
				<param name="source" value="${boot.db.source}" />
			</plugin>
			<plugin class="io.vertigo.dynamo.plugins.store.datastore.sql.SqlDataStorePlugin">
				<param name="dataSpace" value="orchestra"/>
				<param name="connectionName" value="orchestra"/>
				<param name="sequencePrefix" value="SEQ_" />
			</plugin>
			
		</component>
		
		<component api="VSecurityManager" class="io.vertigo.persona.impl.security.VSecurityManagerImpl">
			<param name="userSessionClassName" value="io.vertigo.orchestra.ui.user.OrchestraUserSession" />
		</component>
		<component api="KVStoreManager" class="io.vertigo.dynamo.impl.kvstore.KVStoreManagerImpl">
			<plugin class="io.vertigo.dynamo.plugins.kvstore.delayedmemory.DelayedMemoryKVStorePlugin">
				<param name="collections" value="flowers" />
				<param name="timeToLiveSeconds" value="5" />
			</plugin>
		</component>
		<aspect class="io.vertigo.dynamo.impl.transaction.VTransactionAspect"/>
	</module>
	
	<module name="orchestra-dao" api="false">
		<component class="io.vertigo.orchestra.dao.definition.OProcessDAO"/>
		<component class="io.vertigo.orchestra.dao.definition.OActivityDAO"/>
		<component class="io.vertigo.orchestra.dao.planification.OProcessPlanificationDAO"/>
		<component class="io.vertigo.orchestra.dao.execution.OActivityExecutionDAO"/>
		<component class="io.vertigo.orchestra.dao.execution.OProcessExecutionDAO"/>
		<component class="io.vertigo.orchestra.dao.execution.OActivityWorkspaceDAO"/>
		<component class="io.vertigo.orchestra.dao.execution.OActivityLogDAO"/>
		<component class="io.vertigo.orchestra.dao.execution.ExecutionPAO"/>
		<component class="io.vertigo.orchestra.dao.planification.PlanificationPAO"/>
		<component class="io.vertigo.orchestra.dao.execution.ONodeDAO"/>
		<component class="io.vertigo.orchestra.dao.definition.DefinitionPAO"/>
		<component class="io.vertigo.orchestra.monitoring.dao.summary.SummaryPAO"/>
		<component class="io.vertigo.orchestra.monitoring.dao.uiexecutions.UiexecutionsPAO"/>
		<component class="io.vertigo.orchestra.monitoring.dao.uidefinitions.UidefinitionsPAO"/>
	</module>
	<module name="orchestra">
		<definitions>
			<provider class="io.vertigo.dynamo.plugins.environment.DynamoDefinitionProvider" >
				<resource type ="kpr" path="io/vertigo/orchestra/execution.kpr"/>
			    <resource type="classes" path="io.vertigo.orchestra.domain.DtDefinitions" />  
		    </provider>
		</definitions>   
		<component api="NodeManager" class="io.vertigo.orchestra.impl.node.NodeManagerImpl"/>
		<component api="OrchestraDefinitionManager" class="io.vertigo.orchestra.impl.definitions.OrchestraDefinitionManagerImpl">
			<plugin class="io.vertigo.orchestra.plugins.definitions.db.DbProcessDefinitionStorePlugin"/>
			<plugin class="io.vertigo.orchestra.plugins.definitions.memory.MemoryProcessDefinitionStorePlugin"/>
		</component>
		<component api="OrchestraServices" class="io.vertigo.orchestra.impl.services.OrchestraServicesImpl">
			<plugin class="io.vertigo.orchestra.plugins.services.schedule.db.DbProcessSchedulerPlugin">
				<param name="nodeName" value="${boot.nodeName}" />
				<param name="planningPeriodSeconds" value="${boot.timerPeriod}" />
				<param name="forecastDurationSeconds" value="${boot.forecastDuration}" />
			</plugin>
			<plugin class="io.vertigo.orchestra.plugins.services.schedule.memory.MemoryProcessSchedulerPlugin"/>
			<plugin class="io.vertigo.orchestra.plugins.services.execution.db.DbProcessExecutorPlugin">
				<param name="nodeName" value="${boot.nodeName}" />
				<param name="executionPeriodSeconds" value="${boot.timerPeriod}" />
				<param name="workersCount" value="${boot.workersCount}" />
			</plugin>
			<plugin class="io.vertigo.orchestra.plugins.services.execution.memory.MemoryProcessExecutorPlugin" >
				<param name="workersCount" value="${boot.workersCount}" />
			</plugin>
			<plugin class="io.vertigo.orchestra.plugins.services.log.db.DbProcessLoggerPlugin"/>
			<plugin class="io.vertigo.orchestra.plugins.services.report.db.DbProcessReportPlugin"/>
		</component>
	</module>
	
	<module name="vertigo-vega" api="false">
		<component api="WebServiceManager" class="io.vertigo.vega.impl.webservice.WebServiceManagerImpl">
			<plugin class="io.vertigo.vega.plugins.webservice.scanner.annotations.AnnotationsWebServiceScannerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.webserver.sparkjava.SparkJavaServletFilterWebServerPlugin" >
				<param name="apiPrefix" value="/api"/>
			</plugin>
			<!-- Handlers -->
			
			<plugin class="io.vertigo.vega.plugins.webservice.handler.ExceptionWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.SessionInvalidateWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.SessionWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.RateLimitingWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.SecurityWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.AccessTokenWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.JsonConverterWebServiceHandlerPlugin"/>
			<plugin class="io.vertigo.vega.plugins.webservice.handler.PaginatorAndSortWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.ValidatorWebServiceHandlerPlugin" />
			<plugin class="io.vertigo.vega.plugins.webservice.handler.RestfulServiceWebServiceHandlerPlugin" />
		</component>
		<component api="JsonEngine" class="io.vertigo.vega.engines.webservice.json.GoogleJsonEngine"/>
		<component api="TokenManager" class="io.vertigo.vega.impl.token.TokenManagerImpl">
			<param name="collection" value="orchestra-ui" />
		</component>
	</module>
	<module name="orchestra-webservices" api="false" >
		<component class="io.vertigo.vega.impl.webservice.catalog.CatalogWebServices" />
		<component class="io.vertigo.vega.impl.webservice.catalog.SwaggerWebServices" />
		<component class="io.vertigo.orchestra.webservices.WsInfos" />
		<component class="io.vertigo.orchestra.webservices.WsDefinition" />
		<component class="io.vertigo.orchestra.webservices.WsExecution" />
		<component class="io.vertigo.orchestra.webservices.WsExecutionControl" />
	</module>
	<init>
		<initializer class="io.vertigo.orchestra.ui.OrchestraProcessInitializer" />
	</init>
</config>